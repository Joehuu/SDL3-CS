/*
  <auto-generated/>
  C# bindings for Simple DirectMedia Layer.
  Original copyright notice of input files:

  Simple DirectMedia Layer
  Copyright (C) 1997-2024 Sam Lantinga <slouken@libsdl.org>

  This software is provided 'as-is', without any express or implied
  warranty.  In no event will the authors be held liable for any damages
  arising from the use of this software.

  Permission is granted to anyone to use this software for any purpose,
  including commercial applications, and to alter it and redistribute it
  freely, subject to the following restrictions:

  1. The origin of this software must not be misrepresented; you must not
     claim that you wrote the original software. If you use this software
     in a product, an acknowledgment in the product documentation would be
     appreciated but is not required.
  2. Altered source versions must be plainly marked as such, and must not be
     misrepresented as being the original software.
  3. This notice may not be removed or altered from any source distribution.
*/

using System;
using System.Runtime.InteropServices;

namespace SDL
{
    public enum TTF_DrawCommand
    {
        TTF_DRAW_COMMAND_NOOP,
        TTF_DRAW_COMMAND_FILL,
        TTF_DRAW_COMMAND_COPY,
    }

    public partial struct TTF_FillOperation
    {
        public TTF_DrawCommand cmd;

        public SDL_Rect rect;
    }

    public unsafe partial struct TTF_CopyOperation
    {
        public TTF_DrawCommand cmd;

        public int text_offset;

        public TTF_Font* glyph_font;

        [NativeTypeName("Uint32")]
        public uint glyph_index;

        public SDL_Rect src;

        public SDL_Rect dst;

        [NativeTypeName("void*")]
        public IntPtr reserved;
    }

    [StructLayout(LayoutKind.Explicit)]
    public partial struct TTF_DrawOperation
    {
        [FieldOffset(0)]
        public TTF_DrawCommand cmd;

        [FieldOffset(0)]
        public TTF_FillOperation fill;

        [FieldOffset(0)]
        public TTF_CopyOperation copy;
    }

    public partial struct TTF_TextLayout
    {
    }

    public unsafe partial struct TTF_TextData
    {
        public TTF_Font* font;

        public SDL_FColor color;

        [NativeTypeName("bool")]
        public SDLBool needs_layout_update;

        public TTF_TextLayout* layout;

        public int x;

        public int y;

        public int w;

        public int h;

        public int num_ops;

        public TTF_DrawOperation* ops;

        public int num_clusters;

        public TTF_SubString* clusters;

        public SDL_PropertiesID props;

        [NativeTypeName("bool")]
        public SDLBool needs_engine_update;

        public TTF_TextEngine* engine;

        [NativeTypeName("void*")]
        public IntPtr engine_text;
    }

    public unsafe partial struct TTF_TextEngine
    {
        [NativeTypeName("Uint32")]
        public uint version;

        [NativeTypeName("void*")]
        public IntPtr userdata;

        [NativeTypeName("bool (*)(void *, TTF_Text *)")]
        public delegate* unmanaged[Cdecl]<IntPtr, TTF_Text*, SDLBool> CreateText;

        [NativeTypeName("void (*)(void *, TTF_Text *)")]
        public delegate* unmanaged[Cdecl]<IntPtr, TTF_Text*, void> DestroyText;
    }
}
